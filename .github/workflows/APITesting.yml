name: Sedge test suite

on:
  push:
    branches:
      - main

jobs:
  sedge-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - name: Download and build Sedge
        run: |
          echo "Downloading sedge sources..."
          git clone https://github.com/NethermindEth/sedge.git src --branch main --single-branch
          echo "Sources downloaded."
          cd src
          echo "Building sedge..."
          make compile
      - name: Run Sedge
        run: |
          echo 'Running sedge...'
          ./sedge deps install >> $HOME/sedge.logs
          ./sedge generate --logging none -p $HOME /full-node --map-all --no-mev-boost --no-validator --network chiado /-c lighthouse:sigp/lighthouse:latest -e nethermind:nethermindeth/nethermind:master /--el-extra-flag Sync.NonValidatorNode=true --el-extra-flag Sync.DownloadBodiesInFastSync=false /--el-extra-flag Sync.DownloadReceiptsInFastSync=false /--cl-extra-flag checkpoint-sync-url=http://139.144.26.89:4000/ >> $HOME/sedge.logs
          ./sedge run -p . >> $HOME/sedge.logs
      - name: Verify client synchronization
        run: |
          echo "Checking client synchronization..."
          result=$(curl -s -X POST -H "Content-Type: application/json" --data '{"jsonrpc":"2.0","method":"eth_syncing","params":[],"id":1}' http://localhost:8545)
          if [[ "$result" == *"false"* ]]; then
            echo "Client synchronization completed."
          else
            echo "Client synchronization failed."
            exit 1
          fi
      - name: Test Suite
        run: |
          echo "Running Test Suite..."
          # Test 1
          blockNumber=$(curl -s -X POST -H "Content-Type: application/json" --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' http://localhost:8545)
          blockDetails=$(curl -s -X POST -H "Content-Type: application/json" --data '{"jsonrpc":"2.0","method":"eth_getBlockByNumber","params":["'$blockNumber'", true],"id":1}' http://localhost:8545)
          if [[ "$blockDetails" == *"error"* || "$blockDetails" == *"result\":null"* ]]; then
            echo "Test 1 failed."
            exit 1
          else
            echo "Test 1 passed."
          fi
          # Test 2
          for parallelism in 1 10 100
          do
            echo "Testing with parallelism: $parallelism"
            for i in {1..10000}
            do
              curl -s -X POST -H "Content-Type: application/json" --data '{"jsonrpc":"2.0","method":"eth_getBlockByNumber","params":["'$blockNumber'", true],"id":
